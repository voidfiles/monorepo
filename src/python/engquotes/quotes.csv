feed_item_id	author	source	text	found	archive
4705048103917125073	Alan Kay		Don't worry about what anybody else is going to do. The best way to predict the future is to invent it.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048110902375785	George Boole	quoted in Iverson's Turing Award Lecture	That language is an instrument of human reason, and not merely a medium for the expression of thought, is a truth generally admitted.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048116864316746	Abelson & Sussman	SICP, preface to the first edition	Programs must be written for people to read, and only incidentally for machines to execute.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048124776112582	William Friedki	in a NYT interview	But the audience is right. They're always, always right. You hear directors complain that the advertising was lousy, the distribution is no good, the date was wrong to open the film. I don't believe that. The audience is never wrong. Never.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048131443048712	Richard Feynman		The imagination of nature is far, far greater than the imagination of man.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048137933352706	E. B. White		The best writing is rewriting.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048144291891668	Ivor Brown	The Heart of England	Modern invention has been a great leveller. A machine may operate far more quickly than a political or economic measure to abolish privilege and wipe out the distinctions of class or finance.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048150153359849	Donald Hall	Poetry and Ambition	If our goal is to write poetry, the only way we are likely to be any good is to try to be as great as the best.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048156688178737	Donald knuth		Premature optimization is the root of all evil (or at least most of it) in programming.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048162729240897	Edsger Dijkstra	CACM, 15:10	Lisp has jokingly been called "the most intelligent way to misuse a computer". I think that description is a great compliment because it transmits the full flavor of liberation: it has assisted a number of our most gifted fellow humans in thinking previously impossible thoughts.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048173321390197	G. M. Trevelyan	"Bias in History"	Many who burnt heretics in the ordinary way of their business were otherwise excellent people.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048179251717251	Jon Bentley and Doug McIlroy		The key to performance is elegance, not battalions of special cases.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048185477680076	AP	AP story on Kansas Board of Education	In addition, the board rewrote the definition of science, so that it is no longer limited to the search for natural explanations of phenomena.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048192668729215	Mark Twain		Keep away from people who try to belittle your ambitions. Small people always do that, but the really great make you feel that you, too, can become great.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048199643732140	Stephen King		Any word you have to hunt for in a thesaurus is the wrong word."	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048206436311650	Bertrand Russell	Logical Atomism	As all these results were obtained, not by any heroic method, but by patient and detailed reasoning, I began to think it probable that philosophy had erred in adopting heroic remedies for intellectual difficulties, and that solutions were to be found merely by greater care and accuracy. This view I have come to hold more and more strongly as time went on, and it has led me to doubt whether philosophy, as a study distinct from science and possessed of a method of its own, is anything more than an unfortunate legacy from theology.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048218094886893	Lenin	quoted in First Five-Year Plan for the Development of the National Economy of the People's Republic of China in 1953-1957	In the last analysis, productivity of labour is the most important, the principal thing for the victory of the new social system.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048225065721130	John Adams		No man who ever held the office of President would congratulate a friend on obtaining it.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048230936150328	General James N. Mattis, USMC		PowerPoint makes us stupid.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048237143071937	Bob Klein, chief engineer of the F-14 program		The best way to do something 'lean' is to gather a tight group of people, give them very little money, and very little time.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048243774774670	Steve Jobs		Focusing is about saying no.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048250053422630	John F. Kennedy		The very word "secrecy" is repugnant in a free and open society; and we are as a people inherently and historically opposed to secret societies, to secret oaths and to secret proceedings. We decided long ago that the dangers of excessive and unwarranted concealment of pertinent facts far outweighed the dangers which are cited to justify it. Even today, there is little value in opposing the threat of a closed society by imitating its arbitrary restrictions. Even today, there is little value in insuring the survival of our nation if our traditions do not survive with it.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048256095615598	Aimee Mann		Anybody who cares less about wanting to be cool, I think, is more interesting.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048262311058910	Charles Townes	How the Laser Happened	The late Richard Feynman, a superb physicist, said once as we talked about the laser that the way to tell a great idea is that, when people hear it, they say, 'Gee, I could have thought of that.'	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048268590576559	John Hoyt Williams	A Great and Shining Road	Constantly fortified with the new blood of immigrants who saw America as a place where anything was possible, the nation had adopted an ethos that elevated problem solving to the status of religion.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048275296072702	Sherlock Holmes		When you have eliminated the impossible, whatever remains, however improbable, must be the truth.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048281604223166	John Gall		A complex system that works is invariably found to have evolved from a simple system that worked. The inverse proposition also appears to be true: A complex system designed from scratch never works and cannot be made to work.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048287730373000	Napoleon		When the enemy is making a false movement we must take good care not to interrupt him.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048295720201884	Niels Bohr		An expert is a man who has made all the mistakes which can be made in a very narrow field.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048302663352223	Chinese proverb		Don't fear moving slowly. Fear standing still.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048309444133502	Charlie Munger		I think a life properly lived is just learn, learn, learn all the time.	http://paulgraham.com/quo.html	https://archive.is/TgYyF
4705048315745759682	Richard Hammin	The Art of Doing Science and Engineering	In science, if you know what you are doing, you should not be doing it. In engineering, if you do not know what you are doing, you should not be doing it. Of course, you seldom, if ever, see either pure state.	http://worrydream.com/LadderOfAbstraction/	http://archive.is/ftciF
4705048371982958243	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	One man's constant is another man's variable.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048379584766971	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Functions delay binding; data structures induce binding. Moral: Structure data late in the programming process.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048387966924314	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Syntactic sugar causes cancer of the semicolon.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048394670608662	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Every program is a part of some other program and rarely fits.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048407134210259	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	If a program manipulates a large amount of data, it does so in a small number of ways.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048413139209123	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Symmetry is a complexity-reducing concept (co-routines include subroutines); seek it everywhere.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048419503839325	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	It is easier to write an incorrect program than understand a correct one.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048425457640636	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	A programming language is low level when its programs require attention to the irrelevant.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048432377419977	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048438389926635	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Get into a rut early: Do the same process the same way. Accumulate idioms. Standardize. The only difference(!) between Shakespeare and you was the size of his idiom list - not the size of his vocabulary.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048444326138193	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	If you have a procedure with ten parameters, you probably missed some.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048451042734614	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Recursion is the root of computation since it trades description for time.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048457590640330	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	If two people write exactly the same program, each should be put into microcode and then they certainly won't be the same.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048464162791182	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In the long run every program becomes rococo - then rubble.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048471095256189	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Everything should be built top-down, except the first time.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048477920854770	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Every program has (at least) two purposes: the one for which it was written, and another for which it wasn't.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048484606177899	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	If a listener nods his head when you're explaining your program, wake him up.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048490888257639	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	A program without a loop and a structured variable isn't worth writing.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048497193954810	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	A language that doesn't affect the way you think about programming, is not worth knowing.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048503055737551	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Wherever there is modularity there is the potential for misunderstanding: Hiding information implies a need to check communication.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048510177175402	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Optimization hinders evolution.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048517065205403	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	A good system can't have a weak command language.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048523956891391	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	To understand a program you must become both the machine and the program.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048530145947955	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Perhaps if we wrote programs from childhood on, as adults we'd be able to read them.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048541126719282	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	One can only display complex information in the mind. Like seeing, movement or flow or alteration of view is more important than the static picture, no matter how lovely.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048547751447827	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	There will always be things we wish to say in our programs that in all known languages can only be said poorly.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048555069563334	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Once you understand how to write a program get someone else to write it.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048561199020205	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Around computers it is difficult to find the correct unit of time to measure progress. Some cathedrals took a century to complete. Can you imagine the grandeur and scope of a program that would take as long?	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048567398156764	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	For systems, the analogue of a face-lift is to add to the control graph an edge that creates a cycle, not just an additional node.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048573694354361	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In programming, everything we do is a special case of something more general -- and often we know it too quickly.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048580147411546	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Simplicity does not precede complexity, but follows it.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048586181289846	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Programmers are not to be measured by their ingenuity and their logic but by the completeness of their case analysis.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048597771406798	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The eleventh commandment was "Thou Shalt Compute" or "Thou Shalt Not Compute" - I forget which.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048606148318624	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The string is a stark data structure and everywhere it is passed there is much duplication of process. It is a perfect vehicle for hiding information.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048612277482012	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Everyone can be taught to sculpt: Michelangelo would have had to be taught not to. So it is with great programmers.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048619488044471	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The use of a program to prove the 4-color theorem will not change mathematics - it merely demonstrates that the theorem, a challenge for a century, is probably not important to mathematics.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048625615762582	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The most important computer is the one that rages in our skulls and ever seeks that satisfactory external emulator. The standarization of real computers would be a disaster - and so it probably won't happen.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048632066808676	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Structured Programming supports the law of the excluded middle.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048639212707689	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Re graphics: A picture is worth 10K words - but only those to describe the picture. Hardly any sets of 10K words can be adequately described with pictures.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048645328567192	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	There are two ways to write error-free programs; only the third one works.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048651379856734	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Some programming languages manage to absorb change, but withstand progress.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048658335999637	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	You can measure a programmer's perspective by noting his attitude on the continuing vitality of FORTRAN.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048664878296277	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In software systems, it is often the early bird that makes the worm.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048671089680438	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Sometimes I think the only universal in the computing field is the fetch-execute cycle.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048677044127110	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The goal of computation is the emulation of our synthetic abilities, not the understanding of our analytic ones.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048683084732874	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Like punning, programming is a play on words.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048689130975719	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	As Will Rogers would have said, "There is no such thing as a free variable."	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048695174679745	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The best book on programming for the layman is "Alice in Wonderland"; but that's because it's the best book on anything for the layman.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048701943766686	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Giving up on assembly language was the apple in our Garden of Eden: Languages whose use squanders machine cycles are sinful. The LISP machine now permits LISP programmers to abandon bra and fig-leaf.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048707986374529	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	When we understand knowledge-based systems, it will be as before -- except our fingertips will have been singed.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048714698508586	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Bringing computers into the home won't change either one, but may revitalize the corner saloon.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048720749796712	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Systems have sub-systems and sub-systems have sub- systems and so on ad infinitum - which is why we're always starting over.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048726793701168	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	So many good ideas are never heard from again once they embark in a voyage on the semantic gulf.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048732912279357	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Beware of the Turing tar-pit in which everything is possible but nothing of interest is easy.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048738863353419	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	A LISP programmer knows the value of everything, but the cost of nothing.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048745495349872	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Software is under a constant tension. Being symbolic it is arbitrarily perfectible; but also it is arbitrarily changeable.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048752271950688	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	It is easier to change the specification to fit the program than vice versa.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048758242013534	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Fools ignore complexity. Pragmatists suffer it. Some can avoid it. Geniuses remove it.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048764304560007	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In English every word can be verbed. Would that it were so in our programming languages.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048770563424327	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In seeking the unattainable, simplicity only gets in the way.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048786348647117	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In programming, as in everything else, to be in error is to be reborn.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048792833730693	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In computing, invariants are ephemeral.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048800932168909	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	When we write programs that "learn", it turns out that we do and they don't.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048807032178331	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Often it is the means that justify the ends: Goals advance technique and technique survives even when goal structures crumble.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048813350464370	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Make no mistake about it: Computers process numbers - not symbols. We measure our understanding (and control) by the extent to which we can arithmetize an activity.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048822657284004	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Making something variable is easy. Controlling duration of constancy is the trick.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048830956853810	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Think of all the psychic energy expended in seeking a fundamental distinction between "algorithm" and "program".	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048837331801615	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	If we believe in data structures, we must believe in independent (hence simultaneous) processing. For why else would we collect items within a structure? Why do we tolerate languages that give us the one without the other?	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048843387058517	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In a 5 year period we get one superb programming language. Only we can't control when the 5 year period will be.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048850261197473	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Over the centuries the Indians developed sign language for communicating phenomena of interest. Programmers from different tribes (FORTRAN, LISP, ALGOL, SNOBOL, etc.) could use one that doesn't require them to carry a blackboard on their ponies.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048856562289289	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Documentation is like term insurance: It satisfies because almost no one who subscribes to it depends on its benefits.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048862677110956	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	An adequate bootstrap is a contradiction in terms.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048869057406877	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	It is not a language's weakness but its strengths that control the gradient of its change: Alas, a language never escapes its embryonic sac.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048875810944930	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Is it possible that software is not like anything else, that it is meant to be discarded: that the whole point is to see it as a soap bubble?	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048886983058910	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Because of its vitality, the computing field is always in desperate need of new cliches: Banality soothes our nerves.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048895395750228	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	It is the user who should parameterize procedures, not their creators.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048901600518154	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The cybernetic exchange between man, computer and algorithm is like a game of musical chairs: The frantic search for balance always leaves one of the three standing ill at ease.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048908306914981	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	If your computer speaks English, it was probably made in Japan.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048914451077576	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	A year spent in artificial intelligence is enough to make one believe in God.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048921313369414	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Prolonged contact with the computer turns mathematicians into clerks and vice versa.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048927853999417	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In computing, turning the obvious into the useful is a living definition of the word "frustration".	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048933885391607	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	We are on the verge: Today our program proved Fermat's next-to-last theorem.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048939845510672	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	What is the difference between a Turing machine and the modern computer? It's the same as that between Hillary's ascent of Everest and the establishment of a Hilton hotel on its peak.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048946397424608	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Motto for a research laboratory: What we work on today, others will first think of tomorrow.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705048952760779988	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Though the Chinese should adore APL, it's FORTRAN they put their money on.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049008742276790	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	We kid ourselves if we think that the ratio of procedure to data in an active data-base system can be made arbitrarily small or even kept small.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049016182502835	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	We have the mini and the micro computer. In what semantic niche would the pico computer fall?	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049022221237067	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	It is not the computer's fault that Maxwell's equations are not adequate to design the electric motor.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049028269051432	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	One does not learn computing by using a hand calculator, but one can forget arithmetic.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049034993561565	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Computation has made the tree flower.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049041543434588	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The computer reminds one of Lon Chaney -- it is the machine of a thousand faces.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049047730484383	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The computer is the ultimate polluter: its feces are indistinguish- able from the food it produces.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049054452905057	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	When someone says "I want a programming language in which I need only say what I wish done," give him a lollipop.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049061335371711	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Interfaces keep things tidy, but don't accelerate growth: Functions do.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049072980950030	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Don't have good ideas if you aren't willing to be responsible for them.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049078852991542	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Computers don't introduce order anywhere as much as they expose opportunities.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049085572828136	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	When a professor insists computer science is X but not Y, have compassion for his graduate students.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049092274939647	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In computing, the mean time to failure keeps getting shorter.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049104196976156	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	In man-machine symbiosis, it is man who must adjust: The machines can't.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049111067085455	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	We will never run out of things to program as long as there is a single program around.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049117198173386	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Dealing with failure is easy: Work hard to improve. Success is also easy to handle: You've solved the wrong problem. Work hard to improve.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049124075497589	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	One can't proceed from the informal to the formal by formal means.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049132446190508	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Purely applicative languages are poorly applicable.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049138393594552	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The proof of a system's value is its existence.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049144881362010	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	You can't communicate complexity, only an awareness of it.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049151152781771	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	It's difficult to extract sense from strings, but they're the only communication coin we can count on.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049157524523127	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The debate rages on: is PL/I Bachtrian or Dromedary?	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049164159139335	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Whenever two programmers meet to criticize their programs, both are silent.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049169874980725	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Think of it! With VLSI we can pack 100 ENIACS in 1 sq. cm.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049176150195978	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Editing is a rewording activity.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049183278297106	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Why did the Roman Empire collapse? What is Latin for office automation?	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049189320602575	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Computer Science is embarrassed by the computer.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049195190994277	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	The only constructive theory connecting neuroscience and psychology will arise from the study of software.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049203174053901	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Within a computer natural language is unnatural.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049209671180490	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Most people find the concept of programming obvious, but the doing impossible.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049215662495712	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	You think you know when you can learn, are more sure when you can write, even more when you can teach, but certain when you can program.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049222126393474	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	It goes against the grain of modern education to teach children to program. What fun is there in making plans, acquiring discipline in organizing thoughts, devoting attention to detail and learning to be self-critical?	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049300561047606	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	If you can imagine a society in which the computer- robot is the only menial, you can imagine anything.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049306597766561	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Programming is an unnatural act.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
4705049314233995411	Alan J. Perlis	From ACM's SIGPLAN publication, (September, 1982), Article "Epigrams in Programming", by Alan J. Perlis of Yale University.	Adapting old programs to fit new machines usually means adapting new machines to behave like old ones.	http://www.cs.yale.edu/homes/perlis-alan/quotes.html	http://www.cs.yale.edu/homes/perlis-alan/quotes.html
	Robert Pirsig	Zen and the Art of Motorcycle Maintenance	If a factory is torn down but the rationality which produced it is left standing, then that rationality will simply produce another factory. If a revolution destroys a government, but the systematic patterns of thought that produced that government are left intact, then those patterns will repeat themselves. . . . There’s so much talk about the system. And so little understanding.		
	Russell Ackoff	The Future of Operational Research is Past	Managers are not confronted with problems that are independent of each other, but with dynamic situations that consist of complex systems of changing problems that interact with each other. I call such situations messes. . . . Managers do not solve problems, they manage messes.		