version: '3'

vars:
  HOST_STORAGE_ROOT: /var/lib/dokku/data/storage/
  APP_KIND: "{{if .APP_KIND}}{{.APP_KIND}}{{else}}git{{end}}"
  APP_RUNTIME: "{{if .APP_RUNTIME}}{{.APP_RUNTIME}}{{else}}python{{end}}"
  
tasks:
  dir: "{{ .USER_WORKING_DIR }}"
  create:
    cmds:
      - |
        mkdir -p {{ .CLI_ARGS }}
        echo "APP_NAME={{ .CLI_ARGS }}" > {{ .CLI_ARGS }}/app
        echo "ENV=production" > {{ .CLI_ARGS }}/env
        cat > {{ .CLI_ARGS }}/Taskfile.yaml <<- EOM
        version: '3'

        dotenv: ['env', 'app']

        includes:
          app: ../Taskfile.yaml

        tasks:
          hi:
            dir: "{{"{{"}} .TASKFILE_DIR {{"}}"}}"
            cmds:
              - echo "hello"
        EOM
  init:
    env:
      APP_NAME: "{{.APP_NAME}}"
    cmds:
      - echo {{.APP_NAME}}
      - dokku apps:exists || dokku apps:create
      - task: push_env
      - dokku letsencrypt:set email voidfiles@gmail.com
      - dokku letsencrypt:active | grep true || dokku letsencrypt:enable
      - |
        {{ if .APP_VOLUME }}
          dokku storage:ensure-directory
          dokku storage:list | grep "/var/lib/dokku/data/storage/{{ .APP_NAME }}" || \
            dokku storage:mount {{.HOST_STORAGE_ROOT}}{{ .APP_NAME }}:{{.APP_VOLUME}}
        {{ end }}
      - task: build
      - task: deploy
  build:
    cmds:
      - task: build_{{.APP_KIND}}_{{.APP_RUNTIME}}

  build_from_image_docker:
    dir: "{{ .TASKFILE_DIR }}"
    cmds:
      - |
        docker build --platform linux/amd64 \
          -t ghcr.io/voidfiles/{{ .APP_NAME }}:latest {{ .APP_NAME }} 
      - docker push ghcr.io/voidfiles/{{ .APP_NAME }}:latest

  build_git_python:
    dir: "{{ .TASKFILE_DIR }}"
    cmds:
      - |
        docker buildx build --file=../build/Dockerfile.{{.APP_RUNTIME}} \
          --platform linux/amd64 \
          -t ghcr.io/voidfiles/{{ .APP_NAME }}:latest {{ .APP_NAME }} 
      - docker push ghcr.io/voidfiles/{{ .APP_NAME }}:latest

  build_local:
    dir: "{{ .TASKFILE_DIR }}"
    cmds:
      - |
        docker build --file=../build/Dockerfile.{{.APP_RUNTIME}} \
          -t ghcr.io/voidfiles/{{ .APP_NAME }}:latest {{ .APP_NAME }}

  deploy:
    vars:
      IMAGE: "{{if .FROM_IMAGE}}{{.FROM_IMAGE}}{{else}}ghcr.io/voidfiles/{{ .APP_NAME }}:latest{{end}}"
      FULL_IMAGE:
        sh: docker inspect --format='{{"{{"}}index .RepoDigests 0{{"}}"}}' {{.IMAGE}}
    cmds:
      - ssh -t dokku@brntgarlic docker pull {{ .FULL_IMAGE }}
      - dokku git:from-image {{.FULL_IMAGE}}

  push_env:
    vars:
      ENV_VARS:
        sh: cat env
      PARSED_VARS: '{{ splitList "\n" .ENV_VARS | join " " }}'
    cmds:
      - dokku config:set {{.PARSED_VARS}}
  debug:
    cmds:
      - env
      - echo "{{spew .APP_NAME}}"
      - echo "{{spew .APP_KIND}}"
  logs:
    cmds:
      - dokku logs
  ports:
    cmds:
      - dokku ports:list