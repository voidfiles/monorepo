version: '3'

vars:
  HOST_STORAGE_ROOT: /var/lib/dokku/data/storage/
  APP_NAME: "{{.APP_NAME}}"
  APP_KIND: "{{if .APP_KIND}}{{.APP_KIND}}{{else}}git{{end}}"
  APP_RUNTIME: "{{if .APP_RUNTIME}}{{.APP_RUNTIME}}{{else}}python{{end}}"
tasks:
  dir: "{{ .USER_WORKING_DIR }}"
  dokku:
    cmds:
      - ssh -t dokku@brntgarlic dokku {{.CLI_ARGS}}
  init:
    cmds:
      - task -x app:dokku -- apps:exists {{ .APP_NAME }} || task app:dokku -- apps:create {{ .APP_NAME }}
      - task: push_env
      - task -x app:dokku -- letsencrypt:set {{ .APP_NAME }} email voidfiles@gmail.com
      - task -x app:dokku -- letsencrypt:active {{ .APP_NAME }} || task app:dokku -- letsencrypt:enable {{ .APP_NAME }} 
      - |
        {{ if .APP_VOLUME }}
          task app:dokku -- storage:ensure-directory {{ .APP_NAME }}
          task -x app:dokku -- storage:list scrapoxy | grep "/var/lib/dokku/data/storage/scrapoxy" || \
            task app:dokku -- storage:mount {{ .APP_NAME }} {{.HOST_STORAGE_ROOT}}{{ .APP_NAME }}:/etc/scrapoxy
        {{ end }}
      - task: build
      - task: deploy
  deploy:
    vars:
      IMAGE: "{{if .FROM_IMAGE}}{{.FROM_IMAGE}}{{else}}ghcr.io/voidfiles/{{ .APP_NAME }}:latest{{end}}"
    cmds:
      - ssh -t dokku@brntgarlic docker pull {{ .IMAGE }}
      - task: deploy_{{.APP_KIND}}
  deploy_from_image:
    cmds:
      - task app:dokku -- ps:report {{ .APP_NAME }} --deployed || task app:dokku -- git:from-image {{ .APP_NAME }} {{ .FROM_IMAGE }}:latest
  deploy_git:
    cmds:
      - task app:dokku -- git:from-image {{ .APP_NAME }} ghcr.io/voidfiles/{{ .APP_NAME }}:latest
  build:
    cmds:
      - task: build_{{.APP_KIND}}_{{.APP_RUNTIME}}
  build_from_image_docker:
    cmds:
      - echo "Not required"
  build_git_python:
    dir: "{{ .TASKFILE_DIR }}"
    cmds:
      - |
        docker build --file=../build/Dockerfile.{{.APP_RUNTIME}} \
          --platform linux/amd64 \
          -t ghcr.io/voidfiles/{{ .APP_NAME }}:latest {{ .APP_NAME }} 
      - docker push ghcr.io/voidfiles/{{ .APP_NAME }}:latest
  build_local:
    dir: "{{ .TASKFILE_DIR }}"
    cmds:
      - |
        docker build --file=../build/Dockerfile.{{.APP_RUNTIME}} \
          -t ghcr.io/voidfiles/{{ .APP_NAME }}:latest {{ .APP_NAME }}
  push_env:
    vars:
      ENV_VARS:
        sh: cat env
      PARSED_VARS: '{{ splitList "\n" .ENV_VARS | join " " }}'
    cmds:
      - task app:dokku -- config:set {{ .APP_NAME }} {{.PARSED_VARS}}
  debug:
    cmds:
      - env
      - echo "{{spew .APP_NAME}}"
      - echo "{{spew .APP_KIND}}"
  logs:
    cmds:
      - task app:dokku -- logs {{.APP_NAME}}
  ports:
    cmds:
      - task app:dokku -- ports:list {{.APP_NAME}}